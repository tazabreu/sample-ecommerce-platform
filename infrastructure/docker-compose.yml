version: '3.8'

# Infrastructure-only compose file
# Use this when you only need databases, cache, and messaging without application services
# Useful for: testing, data migration, or running services locally outside containers

services:
  # PostgreSQL Database (Customer Service)
  postgres-customer:
    image: postgres:15-alpine
    container_name: ecommerce-infrastructure-postgres-customer
    environment:
      POSTGRES_DB: customer_db
      POSTGRES_USER: customer_user
      POSTGRES_PASSWORD: dev_password_customer
    ports:
      - "5432:5432"
    volumes:
      - postgres-customer-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U customer_user -d customer_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  # PostgreSQL Database (Order Service)
  postgres-order:
    image: postgres:15-alpine
    container_name: ecommerce-infrastructure-postgres-order
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: dev_password_order
    ports:
      - "5433:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U order_user -d order_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ecommerce-infrastructure-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass dev_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "dev_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  # Redpanda (Kafka-compatible)
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.3
    container_name: ecommerce-infrastructure-redpanda
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:18082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:18082
      - --schema-registry-addr
      - PLAINTEXT://0.0.0.0:28081,OUTSIDE://0.0.0.0:18081
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda:33145
    ports:
      - "9092:9092"
      - "18081:8081"
      - "18082:8082"
      - "9644:9644"
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 45s
    networks:
      - ecommerce-network

volumes:
  postgres-customer-data:
    driver: local
  postgres-order-data:
    driver: local
  redis-data:
    driver: local
  redpanda-data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge
    name: ecommerce-network
